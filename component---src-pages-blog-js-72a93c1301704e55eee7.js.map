{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","BlogPage","_ref","data","a","createElement","title","style","textAlign","href","target","rel","icon","faMedium","allMarkdownRemark","edges","map","_ref2","i","node","key","fields","slug","to","frontmatter","dateTime","date","date_formatted","excerpt","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","borderBottom","gatsby_browser_entry","background","textShadow","padding","display","fontSize","marginBottom","marginTop","defaultProps","Layout","Fragment","header","site","siteMetadata","_755544856","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-blog-js-72a93c1301704e55eee7.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMedium } from '@fortawesome/free-brands-svg-icons'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst BlogPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Blog\" />\n\n    <h2> / blog</h2>\n\n    <p style={{ textAlign: 'right' }}>\n      Besides the articles below, I also write on{' '}\n      <a\n        href=\"https://medium.com/@dcardosods\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={faMedium} /> Medium\n      </a>\n      .\n    </p>\n\n    {data.allMarkdownRemark.edges.map(({ node }, i) => (\n      <article key={node.fields.slug}>\n        <header>\n          <h3>\n            <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n          </h3>\n          <p>\n            <time dateTime={node.frontmatter.date}>\n              {node.frontmatter.date_formatted}\n            </time>\n          </p>\n        </header>\n        <p>{node.excerpt}</p>\n      </article>\n    ))}\n  </Layout>\n)\n\nexport default BlogPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            date_formatted: date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <header style={{ borderBottom: '1px solid grey' }}>\n    <Link to=\"/\" style={{ background: 'none', textShadow: 'none' }}>\n      <h1\n        style={{\n          padding: '8px',\n          display: 'inline-block',\n          fontSize: '44px',\n          marginBottom: '1px',\n        }}\n      >\n        <div>Daniel Cardoso</div>\n        <div\n          style={{ textAlign: 'right', fontSize: '20px', marginTop: '-8px' }}\n        >\n          dS\n        </div>\n      </h1>\n    </Link>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}